{"version":3,"sources":["components/ContactListItem/contactListItem.module.css","App.module.css","components/Filter/filter.module.css","components/ContactList/contactList.module.css","redux/contacts/contacts-action.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reduser.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","contact","includes","ContactForm","useSelector","dispatch","useDispatch","useState","setName","setNumber","handleChange","e","target","value","onSubmit","contactName","preventDefault","some","alert","contactsAction","className","styles","form","formLabel","formInput","type","pattern","title","required","onChange","buttonSubmit","ContactListItem","onDeletContact","contactListItem","buttonDelete","onClick","ContactList","contactList","map","Filter","filterLabel","filterInput","App","container","subtitle","createReducer","actions","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.331afe92.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"contactListItem_contactListItem__3W0wA\",\"contact\":\"contactListItem_contact__3hYuo\",\"buttonDelete\":\"contactListItem_buttonDelete__3uLoy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MJfK\",\"title\":\"App_title__6E8Y8\",\"subtitle\":\"App_subtitle__24Uei\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"filter_filterLabel__aO0Vc\",\"filterInput\":\"filter_filterInput__a8ibb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"contactList_contactList__t8Ev9\"};","// Модули\nimport shortid from 'shortid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contacts/add', ({ name, number }) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction('contacts/delete');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\n// eslint-disable-next-line\nexport default { addContact, deleteContact, changeFilter };\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport contactsAction from '../../redux/contacts/contacts-action';\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\n\nimport styles from '../ContactForm/ContactForm.module.css';\n\nexport default function ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const findByName = contactName => {\n    return contacts.some(({ name }) => name === contactName);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (findByName(name)) {\n      alert(`${name} is already in contacts!`);\n      return;\n    }\n\n    dispatch(contactsAction.addContact({ name, number }));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <label className={styles.formLabel}>\n        Name\n        <input\n          className={styles.formInput}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={styles.formLabel}>\n        Number\n        <input\n          className={styles.formInput}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n\n      <button type=\"submit\" className={styles.buttonSubmit}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from '../ContactListItem/contactListItem.module.css';\n\nconst ContactListItem = ({ name, number, id, onDeletContact }) => {\n  return (\n    <li className={styles.contactListItem}>\n      <p className={styles.contact}>\n        {' '}\n        {name}: {number}\n      </p>\n      <button\n        className={styles.buttonDelete}\n        type=\"button\"\n        onClick={() => onDeletContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeletContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport ContactListItem from '../ContactListItem/ContactListItem';\nimport contactsAction from '../../redux/contacts/contacts-action';\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\n\nimport styles from '../ContactList/contactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  const onDeletContact = id => dispatch(contactsAction.deleteContact(id));\n\n  return (\n    <ul className={styles.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          onDeletContact={() => onDeletContact(id)}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport contactsAction from '../../redux/contacts/contacts-action';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\n\nimport styles from '../Filter/filter.module.css';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChange = e => dispatch(contactsAction.changeFilter(e.target.value));\n\n  return (\n    <label className={styles.filterLabel}>\n      Find contacts by name\n      <input\n        className={styles.filterInput}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nimport styles from './App.module.css';\n\nconst App = () => {\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.title}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={styles.subtitle}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-action';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","// Модули\nimport { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\n// Компоненты\nimport contactsReducers from './contacts/contacts-reduser';\n\nconst middleware = getDefaultMiddleware =>\n  getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }).concat(logger);\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducers),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line\nexport default { store, persistor };\n\n// const initialState = {\n//   contacts: {\n//     items: [],\n//     filter: ''\n//   }\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport App from './App';\nimport store from './redux/store';\n\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3quff\",\"formLabel\":\"ContactForm_formLabel__3xCeI\",\"formInput\":\"ContactForm_formInput__2vY22\",\"buttonSubmit\":\"ContactForm_buttonSubmit__1ghy0\"};"],"sourceRoot":""}